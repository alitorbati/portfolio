{"version":3,"sources":["GlobalStyle.js","components/Text.js","components/Box.js","pages/Home.js","components/Flexbox.js","pages/Projects.js","pages/Work.js","pages/Writing.js","pages/Contact.js","theme.js","App.js","registerServiceWorker.js","index.js"],"names":["global","css","boxSizing","html","fontFamily","fontSize","backgroundColor","color","textTransform","body","lineHeight","minHeight","a","textDecoration","outline","boxShadow","GlobalStyle","createGlobalStyle","reset","styled","space","typography","layout","Home","props","Text","fontWeight","Box","marginBottom","gap","themeGet","flexbox","Projects","useState","React","useEffect","projects","setProjects","fetch","then","res","json","result","filtered","filter","x","test","show","error","Flexbox","flexDirection","map","i","href","title","position","description","key","as","target","style","top","Work","work","setWork","company","startdate","enddate","Writing","writing","setWriting","links","label","Contact","link","colors","foreground","background","accent","darkColors","borders","darkBorders","shadows","button","darkShadows","theme","fontSizes","darkTheme","navItems","path","component","exact","NavItems","withRouter","active","location","pathname","display","transform","to","App","initialTheme","window","matchMedia","matches","lightTheme","setTheme","addEventListener","event","maxWidth","padding","alignItems","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5de7fecf.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport css from \"@styled-system/css\";\n\nconst global = css({\n  \"*\": {\n    boxSizing: \"border-box\",\n  },\n  html: {\n    fontFamily:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    fontSize: [\"20px\"],\n    backgroundColor: \"background\",\n    color: \"foreground\",\n    textTransform: \"lowercase\",\n  },\n  body: {\n    lineHeight: \"1.5\",\n    minHeight: \"100vh\",\n  },\n  a: {\n    color: \"foreground\",\n    textDecoration: \"none\",\n  },\n  \"a:hover\": {\n    textDecoration: \"underline\",\n  },\n  \"a:focus-visible\": {\n    outline: 0,\n    boxShadow: \"button\",\n  },\n});\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  ${global}\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\nimport { color, space, typography } from \"styled-system\";\n\nexport default styled(\"span\")`\n  ${color}\n  ${space}\n  ${typography}\n`;\n","import styled from \"styled-components\";\nimport { color, space, layout } from \"styled-system\";\n\nexport default styled(\"div\")`\n  ${color}\n  ${space}\n  ${layout}\n`;\n","import * as React from \"react\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\n\n// const MAX_WEIGHT = 900\n// const MIN_WEIGHT = 100\n// const weightRange = MAX_WEIGHT - MIN_WEIGHT\n\n// const calcWeight = (positionPercentX) => positionPercentX * weightRange + MIN_WEIGHT\n\nconst Home = (props) => {\n  // const [ weight, setWeight ] = useState(null)\n  return (\n    // <div onMouseMove={ e => setWeight(calcWeight(e.clientX / window.innerWidth)) }>\n    <div>\n      {/* <Text fontSize={ 2 } fontWeight={ weight }> */}\n      <Text fontSize={2} fontWeight={700}>\n        Ali Torbati\n      </Text>\n      <Box marginBottom={2} />\n      <Text fontSize={1} color=\"accent\">\n        My professional focus is on UI Engineering. This discipline is\n        expressive, nuanced and complex. It requires both deep and broad\n        knowledge, which is why I find it so rewarding.\n      </Text>\n    </div>\n  );\n};\n\n// const StyledHome = styled(Home)`\n//   height: 100vh;\n// `\n\nexport default Home;\n","import styled from \"styled-components\";\nimport css from \"@styled-system/css\";\nimport { themeGet } from \"@styled-system/theme-get\";\nimport { flexbox, layout, space } from \"styled-system\";\n\nexport default styled(\"div\")`\n  display: flex;\n  ${(props) =>\n    props.gap ? css({ gap: themeGet(`space.${props.gap}`, \"\")(props) }) : \"\"}\n  ${flexbox}\n  ${layout}\n  ${space}\n`;\n","import * as React from \"react\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\nimport Flexbox from \"../components/Flexbox\";\n\nconst Projects = (props) => {\n  const { useState, useEffect } = React;\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      // https://benborgers.com/posts/google-sheets-json\n      \"https://opensheet.elk.sh/12sERGaYvU1ZUsEOnG11LgR8ZQVtLW3zn2Kv8yOOBPyg/Sheet1\"\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          const filtered = result.filter((x) => /true/i.test(x.show));\n          setProjects(filtered);\n        },\n        (error) => {\n          setProjects([]);\n        }\n      );\n  }, []);\n\n  return (\n    <Box>\n      <Text fontSize=\"1\" color=\"accent\">\n        Tiny experiments and freelance gigs\n      </Text>\n      <Box marginBottom=\"3\" />\n      <Flexbox flexDirection=\"column\" gap=\"4\">\n        {projects.map((x, i) => {\n          const { href, title, position, description } = x;\n          return (\n            <Box key={i}>\n              <Text\n                as={\"a\"}\n                href={href}\n                target=\"_blank\"\n                fontSize={2}\n                fontWeight={700}\n                style={{ position: \"sticky\", top: 0 }}\n              >\n                {title}\n              </Text>\n              <Box marginBottom={2} />\n              <Text>{position}</Text>\n              <Box marginBottom=\"2\" />\n              <Text as=\"p\" color=\"accent\">\n                {description}\n              </Text>\n            </Box>\n          );\n        })}\n      </Flexbox>\n    </Box>\n  );\n};\n\nexport default Projects;\n","import * as React from \"react\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\nimport Flexbox from \"../components/Flexbox\";\n\nconst Work = (props) => {\n  const { useState, useEffect } = React;\n  const [work, setWork] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      // https://benborgers.com/posts/google-sheets-json\n      \"https://opensheet.elk.sh/1VnD8RJtceCIFPvWzrCOcQCY5eUY5_FO1yOwvGIpCXe8/Sheet1\"\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          const filtered = result.filter((x) => /true/i.test(x.show));\n          setWork(filtered);\n        },\n        (error) => {\n          setWork([]);\n        }\n      );\n  }, []);\n\n  return (\n    <Box>\n      <Text fontSize=\"1\" color=\"accent\">\n        Career progression\n      </Text>\n      <Box marginBottom=\"3\" />\n      <Flexbox flexDirection=\"column\" gap=\"4\">\n        {work.map((x, i) => {\n          const { href, company, position, startdate, enddate, description } =\n            x;\n          return (\n            <Box key={i}>\n              <Text\n                as={\"a\"}\n                href={href}\n                target=\"_blank\"\n                fontSize={2}\n                fontWeight={700}\n                style={{ position: \"sticky\", top: 0 }}\n              >\n                {company}\n              </Text>\n              <Box marginBottom={2} />\n              <Text>{position}</Text>\n              <Box />\n              <Text color=\"accent\">\n                {startdate} → {enddate}\n              </Text>\n              <Box marginBottom=\"2\" />\n              <Box>\n                <Text as=\"p\" color=\"accent\">\n                  {description}\n                </Text>\n              </Box>\n            </Box>\n          );\n        })}\n      </Flexbox>\n    </Box>\n  );\n};\n\nexport default Work;\n","import * as React from \"react\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\nimport Flexbox from \"../components/Flexbox\";\n\nconst Writing = (props) => {\n  const { useState, useEffect } = React;\n  const [writing, setWriting] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      // https://benborgers.com/posts/google-sheets-json\n      \"https://opensheet.elk.sh/1EXvzAgQBxhzfwzhb8fFyziKJogfys5T7SBCORX-ZpAo/Sheet1\"\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          const filtered = result.filter((x) => /true/i.test(x.show));\n          setWriting(filtered);\n        },\n        (error) => {\n          setWriting([]);\n        }\n      );\n  }, []);\n\n  return (\n    <Box>\n      <Text fontSize=\"1\" color=\"accent\">\n        Thoughts on systems\n      </Text>\n      <Box marginBottom=\"3\" />\n      <Flexbox flexDirection=\"column\" gap=\"4\">\n        {writing.map((x, i) => {\n          const { href, title, position, description } = x;\n          return (\n            <Box key={i}>\n              <Text\n                as={\"a\"}\n                href={href}\n                target=\"_blank\"\n                fontSize={2}\n                fontWeight={700}\n                style={{ position: \"sticky\", top: 0 }}\n              >\n                {title}\n              </Text>\n              <Box marginBottom={2} />\n              <Text>{position}</Text>\n              <Box marginBottom=\"2\" />\n              <Text as=\"p\" color=\"accent\">\n                {description}\n              </Text>\n            </Box>\n          );\n        })}\n      </Flexbox>\n    </Box>\n  );\n};\n\nexport default Writing;\n","import * as React from \"react\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\n\nconst links = [\n  {\n    label: \"email\",\n    href: \"mailto:ali.torbati@gmail.com\",\n  },\n  {\n    label: \"github\",\n    href: \"http://github.com/alitorbati\",\n  },\n  {\n    label: \"linkedin\",\n    href: \"http://linkedin.com/in/alitorbati\",\n  },\n  {\n    label: \"twitter\",\n    href: \"http://twitter.com/alitorbati\",\n  },\n  {\n    label: \"instagram\",\n    href: \"http://instagram.com/alitorbati\",\n  },\n  {\n    label: \"behance\",\n    href: \"http://behance.net/alitorbati\",\n  },\n];\n\nconst Contact = (props) => {\n  return (\n    <Box as=\"ul\">\n      {links.map((link) => (\n        <li key={link.href}>\n          <Text as={\"a\"} href={link.href} target=\"_blank\" fontSize={1}>\n            {link.label}\n          </Text>\n        </li>\n      ))}\n    </Box>\n  );\n};\n\nexport default Contact;\n","const fontSizes = [\"1em\", \"1.5em\", \"2em\"];\n\nconst colors = {\n  foreground: \"#222\",\n  background: \"white\",\n  accent: \"#888\",\n};\n\n// something about this pattern smells\nconst darkColors = {\n  foreground: \"white\",\n  background: \"#222\",\n  accent: \"#888\",\n};\n\nconst space = [0, 5, 10, 30, 60];\n\nconst borders = [`2px solid ${colors.foreground}`];\n\nconst darkBorders = [`2px solid ${darkColors.foreground}`];\n\nconst shadows = {\n  button: `0 0 0 1px ${colors.background}, 0 0 0 3px ${colors.foreground}`,\n};\n\nconst darkShadows = {\n  button: `0 0 0 1px ${darkColors.background}, 0 0 0 3px ${darkColors.foreground}`,\n};\n\nconst theme = {\n  fontSizes,\n  space,\n  colors,\n  borders,\n  shadows,\n};\n\nexport const darkTheme = {\n  ...theme,\n  colors: darkColors,\n  borders: darkBorders,\n  shadows: darkShadows,\n};\n\nexport default theme;\n","import * as React from \"react\";\nimport { BrowserRouter, Route, Link, withRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport Home from \"./pages/Home\";\nimport Projects from \"./pages/Projects\";\nimport Work from \"./pages/Work\";\nimport Writing from \"./pages/Writing\";\nimport Contact from \"./pages/Contact\";\nimport Text from \"./components/Text\";\nimport Box from \"./components/Box\";\nimport Flexbox from \"./components/Flexbox\";\nimport lightTheme, { darkTheme } from \"./theme\";\n\nconst navItems = [\n  { path: \"/\", label: \"home\", component: Home, exact: true },\n  { path: \"/projects\", label: \"projects\", component: Projects },\n  { path: \"/work\", label: \"work\", component: Work },\n  { path: \"/writing\", label: \"writing\", component: Writing },\n  { path: \"/contact\", label: \"contact\", component: Contact },\n];\n\nconst NavItems = withRouter((props) => (\n  <React.Fragment>\n    {navItems.map((x) => {\n      const active = props.location.pathname === x.path;\n      return (\n        <Text key={x.path}>\n          <Link\n            style={{\n              display: \"inline-block\",\n              transform: active ? \"scaleX(-1)\" : null,\n            }}\n            to={x.path}\n          >\n            {x.label}\n          </Link>\n        </Text>\n      );\n    })}\n  </React.Fragment>\n));\n\nconst App = (props) => {\n  const initialTheme =\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? darkTheme\n      : lightTheme;\n\n  const [theme, setTheme] = React.useState(initialTheme);\n\n  React.useEffect(() => {\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", (event) => {\n        event.matches ? setTheme(darkTheme) : setTheme(lightTheme);\n      });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Box as=\"main\" maxWidth=\"800px\" padding={[3, 4]}>\n          <GlobalStyle />\n          <Box as=\"header\">\n            <Box as=\"nav\" marginBottom={4}>\n              <Flexbox alignItems=\"center\" gap=\"2\">\n                <NavItems />\n              </Flexbox>\n            </Box>\n          </Box>\n          <Box>\n            {navItems.map((props) => {\n              return (\n                <Route\n                  path={props.path}\n                  exact={props.exact}\n                  component={props.component}\n                  key={props.path}\n                />\n              );\n            })}\n          </Box>\n        </Box>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}