{"version":3,"sources":["GlobalStyle.js","components/Text.js","pages/Home.js","components/Box.js","components/CleanSheetData.js","pages/Jobs.js","pages/Projects.js","pages/Contact.js","components/Button.js","theme.js","App.js","registerServiceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","reset","css","backgroundColor","color","boxShadow","styled","space","typography","Home","props","Text","fontSize","fontWeight","layout","CleanSheetData","data","cleanData","map","item","cleanItem","Object","keys","filter","key","includes","forEach","replace","$t","children","Datedivider","span","marginX","Jobs","useState","jobs","setJobs","url","useEffect","abortController","AbortController","a","fetch","signal","json","then","feed","entry","fetchData","abort","x","show","toLowerCase","i","Box","marginBottom","as","href","target","style","position","top","company","startdate","enddate","description","Projects","projects","setProjects","title","Contact","LocalLink","link","label","padding","border","outline","colors","foreground","background","accent","darkColors","borders","darkBorders","shadows","button","darkShadows","theme","fontSizes","darkTheme","navItems","path","component","exact","NavItems","withRouter","Fragment","marginRight","textDecoration","location","pathname","to","App","window","localStorage","getItem","setTheme","lightTheme","maxWidth","Button","onClick","newTheme","setItem","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5a794379.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport css from \"@styled-system/css\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n  }\n\n  @import url('https://rsms.me/inter/inter.css');\n\n  html {\n    font-family: 'Inter', sans-serif;\n    font-size: 16px;\n    ${css({\n      backgroundColor: \"background\",\n      color: \"foreground\",\n    })}\n    text-transform: lowercase;\n  }\n\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n\n  body {\n    line-height: 1.5;\n    min-height: 100vh;\n    ${\"\" /* cursor: url('${cursorImage}'), auto !important; */}\n  }\n\n  a {\n    ${css({ color: \"foreground\" })}\n  }\n\n  a:focus-visible {\n    outline: 0;\n    ${css({ boxShadow: \"button\" })}\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\nimport { color, space, typography } from \"styled-system\";\n\nexport default styled(\"span\")`\n  ${color}\n  ${space}\n  ${typography}\n`;\n","import React from \"react\";\nimport Text from \"../components/Text\";\n\n// const MAX_WEIGHT = 900\n// const MIN_WEIGHT = 100\n// const weightRange = MAX_WEIGHT - MIN_WEIGHT\n\n// const calcWeight = (positionPercentX) => positionPercentX * weightRange + MIN_WEIGHT\n\nconst Home = (props) => {\n  // const [ weight, setWeight ] = useState(null)\n  return (\n    // <div onMouseMove={ e => setWeight(calcWeight(e.clientX / window.innerWidth)) }>\n    <div>\n      {/* <Text fontSize={ 2 } fontWeight={ weight }> */}\n      <Text fontSize={2} fontWeight={700}>\n        Ali Torbati\n      </Text>\n    </div>\n  );\n};\n\n// const StyledHome = styled(Home)`\n//   height: 100vh;\n// `\n\nexport default Home;\n","import styled from \"styled-components\";\nimport { color, space, layout } from \"styled-system\";\n\nexport default styled(\"div\")`\n  ${color}\n  ${space}\n  ${layout}\n`;\n","const CleanSheetData = (props) => {\n  if (!props.data) return null;\n  const cleanData = props.data.map((item) => {\n    const cleanItem = {};\n    Object.keys(item)\n      .filter((key) => key.includes(\"gsx$\"))\n      .forEach((key) => {\n        cleanItem[key.replace(\"gsx$\", \"\")] = item[key].$t;\n      });\n    return cleanItem;\n  });\n\n  return props.children({ data: cleanData });\n};\n\nexport default CleanSheetData;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport css from \"@styled-system/css\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\nimport CleanSheetData from \"../components/CleanSheetData\";\n\nconst Datedivider = styled.span`\n  display: inline-block;\n  width: 100px;\n  height: 1px;\n  position: relative;\n  top: -4px;\n  ${css({\n    backgroundColor: \"foreground\",\n    marginX: 2,\n  })}\n`;\n\nconst Jobs = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const url =\n    \"https://spreadsheets.google.com/feeds/list/1VnD8RJtceCIFPvWzrCOcQCY5eUY5_FO1yOwvGIpCXe8/od6/public/values?alt=json\";\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchData() {\n      const res = await fetch(url, { signal: abortController.signal });\n      res.json().then((data) => setJobs(data.feed.entry));\n    }\n\n    fetchData();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [url]);\n\n  return (\n    <CleanSheetData data={jobs}>\n      {({ data }) =>\n        data\n          .filter((x) => x.show.toLowerCase() === \"true\")\n          .map((x, i) => (\n            <Box key={i} marginBottom={4}>\n              <Text\n                as={\"a\"}\n                href={x.href}\n                target=\"_blank\"\n                fontSize={[1, 2]}\n                fontWeight={700}\n                style={{ position: \"sticky\", top: 0 }}\n              >\n                {x.company}\n              </Text>\n              <Box marginBottom={3}>\n                <Text fontWeight={700}>{x.position}</Text>\n                <Box>\n                  <Text>{x.startdate}</Text>\n                  <Datedivider />\n                  <Text>{x.enddate}</Text>\n                </Box>\n              </Box>\n              <Text as=\"p\">{x.description}</Text>\n            </Box>\n          ))\n      }\n    </CleanSheetData>\n  );\n};\n\nexport default Jobs;\n","import React, { useState, useEffect } from \"react\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\nimport CleanSheetData from \"../components/CleanSheetData\";\n\nconst Projects = (props) => {\n  const [projects, setProjects] = useState([]);\n  const url =\n    \"https://spreadsheets.google.com/feeds/list/12sERGaYvU1ZUsEOnG11LgR8ZQVtLW3zn2Kv8yOOBPyg/od6/public/values?alt=json\";\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchData() {\n      const res = await fetch(url, { signal: abortController.signal });\n      res.json().then((data) => setProjects(data.feed.entry));\n    }\n\n    fetchData();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [url]);\n\n  return (\n    <CleanSheetData data={projects}>\n      {({ data }) =>\n        data\n          .filter((x) => x.show.toLowerCase() === \"true\")\n          .map((x, i) => (\n            <Box key={i} marginBottom={4}>\n              <Text\n                as={\"a\"}\n                href={x.href}\n                target=\"_blank\"\n                fontSize={[1, 2]}\n                fontWeight={700}\n                style={{ position: \"sticky\", top: 0 }}\n              >\n                {x.title}\n              </Text>\n              {/*\n                <Box>\n                  <img src={ kineticType }/>\n                </Box>\n                */}\n              <Box marginBottom={2}>\n                <Text fontWeight={700}>{x.position}</Text>\n              </Box>\n              <Text as=\"p\" marginBottom={2}>\n                {x.description}\n              </Text>\n            </Box>\n          ))\n      }\n    </CleanSheetData>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport Text from \"../components/Text\";\nimport Box from \"../components/Box\";\n\nconst Contact = (props) => {\n  const primarySocialLinks = [\n    {\n      label: \"twitter\",\n      href: \"http://twitter.com/alitorbati\",\n    },\n    {\n      label: \"github\",\n      href: \"http://github.com/alitorbati\",\n    },\n  ];\n  const secondarySocialLinks = [\n    {\n      label: \"email\",\n      href: \"mailto:ali.torbati@gmail.com\",\n    },\n    {\n      label: \"instagram\",\n      href: \"http://instagram.com/alitorbati\",\n    },\n    {\n      label: \"linkedin\",\n      href: \"http://linkedin.com/in/alitorbati\",\n    },\n    {\n      label: \"behance\",\n      href: \"http://behance.net/alitorbati\",\n    },\n  ];\n\n  const LocalLink = (props) => {\n    return (\n      <Text\n        as={\"a\"}\n        href={props.link.href}\n        target=\"_blank\"\n        fontSize={[1, 2]}\n        fontWeight={700}\n        style={{ position: \"sticky\", top: 0 }}\n      >\n        {props.link.label}\n      </Text>\n    );\n  };\n\n  return (\n    <Box>\n      <Box as=\"ul\" marginBottom={3}>\n        {primarySocialLinks.map((link) => (\n          <li key={link.href}>\n            <LocalLink link={link} />\n          </li>\n        ))}\n      </Box>\n      <Box as=\"ul\">\n        {secondarySocialLinks.map((link) => (\n          <li key={link.href}>\n            <LocalLink link={link} />\n          </li>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contact;\n","import styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport css from \"@styled-system/css\";\n\nexport default styled(\"button\")(\n  space,\n  css({\n    padding: 1,\n    backgroundColor: \"background\",\n    color: \"foreground\",\n    fontSize: 0,\n    border: 0,\n    \"&:focus-visible\": {\n      boxShadow: \"button\",\n    },\n  }),\n  {\n    outline: 0,\n  }\n);\n","const fontSizes = [\"1em\", \"2em\", \"3em\"];\n\nconst colors = {\n  foreground: \"#222\",\n  background: \"white\",\n  accent: \"#f00\",\n};\n\n// something about this pattern smells\nconst darkColors = {\n  foreground: \"white\",\n  background: \"#222\",\n  accent: \"#f00\",\n};\n\nconst space = [0, 5, 10, 30, 60];\n\nconst borders = [`2px solid ${colors.foreground}`];\n\nconst darkBorders = [`2px solid ${darkColors.foreground}`];\n\nconst shadows = {\n  button: `0 0 0 1px ${colors.background}, 0 0 0 3px ${colors.foreground}`,\n};\n\nconst darkShadows = {\n  button: `0 0 0 1px ${darkColors.background}, 0 0 0 3px ${darkColors.foreground}`,\n};\n\nconst theme = {\n  fontSizes,\n  space,\n  colors,\n  borders,\n  shadows,\n};\n\nexport const darkTheme = {\n  ...theme,\n  colors: darkColors,\n  borders: darkBorders,\n  shadows: darkShadows,\n};\n\nexport default theme;\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Link, withRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport Home from \"./pages/Home\";\nimport Jobs from \"./pages/Jobs\";\nimport Projects from \"./pages/Projects\";\nimport Contact from \"./pages/Contact\";\n// import Experiments from './pages/Experiments.1'\n// import Sandbox from './pages/Sandbox'\nimport Text from \"./components/Text\";\nimport Box from \"./components/Box\";\nimport Button from \"./components/Button\";\nimport lightTheme, { darkTheme } from \"./theme\";\n\nconst navItems = [\n  { path: \"/\", label: \"home\", component: Home, exact: true },\n  { path: \"/projects\", label: \"projects\", component: Projects },\n  { path: \"/jobs\", label: \"jobs\", component: Jobs },\n  { path: \"/contact\", label: \"contact\", component: Contact },\n  // { path: '/experiments', component: Experiments },\n  // { path: '/sandbox', component: Sandbox },\n];\n\nconst NavItems = withRouter((props) => (\n  <React.Fragment>\n    {navItems.map((x) => (\n      <Text key={x.path} marginRight={3}>\n        <Link\n          style={{\n            textDecoration:\n              // props.location.pathname === x.path ? \"underline overline\" : null,\n              props.location.pathname === x.path ? \"line-through\" : null,\n          }}\n          to={x.path}\n          key={x.path}\n        >\n          {x.label}\n        </Link>\n      </Text>\n    ))}\n  </React.Fragment>\n));\n\nconst App = (props) => {\n  const initialTheme = () => window.localStorage.getItem(\"theme\") || \"light\";\n  const [theme, setTheme] = useState(initialTheme);\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    window.localStorage.setItem(\"theme\", newTheme);\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <BrowserRouter>\n        <Box as=\"main\" maxWidth=\"800px\" padding={4}>\n          <GlobalStyle />\n          <Box as=\"header\">\n            <Box as=\"nav\" marginBottom={4}>\n              <NavItems />\n              <Button onClick={toggleTheme}>theme</Button>\n            </Box>\n          </Box>\n          <Box>\n            {navItems.map((x) => (\n              <Route {...x} key={x.path} />\n            ))}\n          </Box>\n        </Box>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}